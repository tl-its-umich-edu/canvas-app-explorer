// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: mXv5TZ5SUPGRneH9RoMn6q
// Component: fd0a48CHFpLDW
import * as React from "react";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import "../plasmic__default_style.css"; // plasmic-import: global/defaultcss
import "./plasmic_canvas_app_explorer.css"; // plasmic-import: mXv5TZ5SUPGRneH9RoMn6q/projectcss
import "./PlasmicMenuButton.css"; // plasmic-import: fd0a48CHFpLDW/css
import BarsIcon from "./icons/PlasmicIcon__Bars"; // plasmic-import: sbhDNyRJzKB1n/icon
import TimesIcon from "./icons/PlasmicIcon__Times"; // plasmic-import: ns27_eln7Rup0/icon

export const PlasmicMenuButton__VariantProps = new Array("expanded");

export const PlasmicMenuButton__ArgProps = new Array("href");

function PlasmicMenuButton__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        "plasmic_default__all",
        "plasmic_default__div",
        "root_reset_mXv5TZ5SUPGRneH9RoMn6q",
        "MenuButton__root__aKm5"
      )}
    >
      <div
        data-plasmic-name={"freeBox"}
        data-plasmic-override={overrides.freeBox}
        className={classNames(
          "plasmic_default__all",
          "plasmic_default__div",
          "MenuButton__freeBox__qg29I",
          {
            MenuButton__freeBox__expanded__qg29IWmXfd: hasVariant(
              variants,
              "expanded",
              "expanded"
            )
          }
        )}
      >
        {(hasVariant(variants, "expanded", "expanded") ? false : true) ? (
          <BarsIcon
            className={classNames(
              "plasmic_default__all",
              "plasmic_default__svg",
              "MenuButton__svg___07On",
              {
                MenuButton__svg__expanded___07OnWmXfd: hasVariant(
                  variants,
                  "expanded",
                  "expanded"
                )
              }
            )}
            role={"img"}
          />
        ) : null}
        {(hasVariant(variants, "expanded", "expanded") ? true : false) ? (
          <TimesIcon
            className={classNames(
              "plasmic_default__all",
              "plasmic_default__svg",
              "MenuButton__svg__vNni9",
              {
                MenuButton__svg__expanded__vNni9WmXfd: hasVariant(
                  variants,
                  "expanded",
                  "expanded"
                )
              }
            )}
            role={"img"}
          />
        ) : null}
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "freeBox"],
  freeBox: ["freeBox"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicMenuButton__ArgProps,
      internalVariantPropNames: PlasmicMenuButton__VariantProps
    });

    const { dataFetches } = props;
    return PlasmicMenuButton__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicMenuButton";
  } else {
    func.displayName = `PlasmicMenuButton.${nodeName}`;
  }
  return func;
}

export const PlasmicMenuButton = Object.assign(
  // Top-level PlasmicMenuButton renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    freeBox: makeNodeComponent("freeBox"),
    // Metadata about props expected for PlasmicMenuButton
    internalVariantProps: PlasmicMenuButton__VariantProps,
    internalArgProps: PlasmicMenuButton__ArgProps
  }
);

export default PlasmicMenuButton;
/* prettier-ignore-end */
